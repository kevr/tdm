name: tests
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: kevr2d2/ubuntu-node:jammy
    steps:
      - name: Package cache
        id: pkgcache
        uses: actions/cache@v3
        with:
          path: ~/packages
          key: ${{ runner.os }}-ubuntu-22.04-packages-v2

      - name: Restore cache
        if: steps.pkgcache.outputs.cache-hit == 'true'
        run: cp -vrf ~/packages/* /var/cache/apt/archives/

      - name: Install dependencies
        run: |
          apt-get -y update
          apt-get -y install git meson libncurses-dev libpam-dev gcovr lcov sudo clang-format-16 pkg-config whois fakeroot-ng xterm

      - name: Save cache
        run: |
          mkdir -p ~/packages
          cp -vrf /var/cache/apt/archives/*.deb ~/packages/

      - name: Checkout commit
        uses: actions/checkout@v3

      - name: Take ownership
        run: chown -R test:test .

      - name: Install pam.pc
        run: install -m666 pc/ubuntu-jammy.pam.pc /usr/share/pkgconfig/pam.pc

      - name: Create tdm_test user
        run: bash ci/adduser.sh

      - name: Add testing user to the shadow group
        run: gpasswd -a test shadow

      - name: Lint sources
        run: find src -type f -name '*.h' -o -name '*.cpp' | xargs clang-format-16 -Werror --dry-run

      - name: Build tdm binary
        run: |
          sudo -u test meson setup -Ddisable_tests=true build_exe
          sudo -u test ninja -j $(nproc) -C build_exe

      - name: Run tests
        run: |
          sudo -u test meson setup -Ddisable_bin=true -Db_coverage=true build
          sudo -u test TERM=xterm-256color fakeroot ninja -j $(nproc) -C build test

      - name: Upload testlog.txt artifact
        uses: actions/upload-artifact@v3
        with:
          name: testlog.txt
          path: build/meson-logs/testlog.txt

      - name: Build coverage
        run: sudo -u test ninja -C build coverage

      - name: Upload coverage.txt artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage.txt
          path: build/meson-logs/coverage.txt

      - name: Check coverage
        run: |
          cat build/meson-logs/coverage.txt
          cat build/meson-logs/coverage.txt | grep -Eq '^TOTAL.*(100%)$'
